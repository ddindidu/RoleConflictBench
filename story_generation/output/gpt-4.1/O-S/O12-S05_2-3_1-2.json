{"Code1": "O12", "Role1": "software developer", "Expectation_No1": 1, "Expectation1": "Write clean, maintainable, and efficient code", "Obligation1": 2, "Situation1": "The new feature is nearly ready but performance warnings appear in code reviews", "Code2": "S05", "Role2": "advocate", "Expectation_No2": 2, "Expectation2": "Provide clients with clear and accurate legal advice", "Obligation2": 3, "Situation2": "The client is facing an urgent legal issue and relies on precise advice for immediate action", "Story": "I stared at my screen, the lines of code for the new feature blurring together. The code review comments pinged in: \u201cPerformance issues\u2014needs refactoring.\u201d As a software developer, I knew I couldn\u2019t ignore them. Clean, efficient code was my responsibility, and I took pride in it. But my phone buzzed again\u2014a message from a client. As their advocate, I was their lifeline, and now they faced an urgent legal issue. They needed clear, accurate advice, and they needed it now. My mind raced. If I focused on the code, the client might make a costly mistake. If I answered the client, the code might go live with flaws. Both roles demanded my full attention, both were non-negotiable. My heart pounded as I weighed the expectations, feeling the pressure build. I couldn\u2019t let either side down, but I couldn\u2019t be in two places at once."}